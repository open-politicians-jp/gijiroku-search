name: 📄 政党マニフェスト収集（手動実行）

on:
  workflow_dispatch:
    inputs:
      collection_mode:
        description: '収集モード'
        required: false
        default: 'standard'
        type: choice
        options:
        - standard
        - archive
        - forced
      target_parties:
        description: '対象政党（all, ldp, cdp, etc.）'
        required: false
        default: 'all'
        type: string
      skip_update_check:
        description: '更新チェックをスキップ'
        required: false
        default: false
        type: boolean

# GitHub Actionsでのcommit/push権限設定
permissions:
  contents: write
  actions: read

jobs:
  collect-manual-manifestos:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: 🔧 Setup uv environment
      working-directory: scripts/uv-data-collection
      run: |
        uv sync
        
    - name: 🔍 マニフェスト収集設定確認
      id: collection-setup
      working-directory: scripts/uv-data-collection
      run: |
        echo "## 📄 マニフェスト収集設定" >> $GITHUB_STEP_SUMMARY
        echo "- **収集モード**: ${{ github.event.inputs.collection_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **対象政党**: ${{ github.event.inputs.target_parties }}" >> $GITHUB_STEP_SUMMARY
        echo "- **更新チェックスキップ**: ${{ github.event.inputs.skip_update_check }}" >> $GITHUB_STEP_SUMMARY
        
        # 実行パラメータ設定
        COLLECTION_MODE="${{ github.event.inputs.collection_mode }}"
        TARGET_PARTIES="${{ github.event.inputs.target_parties }}"
        SKIP_UPDATE_CHECK="${{ github.event.inputs.skip_update_check }}"
        
        echo "collection_mode=${COLLECTION_MODE}" >> $GITHUB_OUTPUT
        echo "target_parties=${TARGET_PARTIES}" >> $GITHUB_OUTPUT
        echo "skip_update_check=${SKIP_UPDATE_CHECK}" >> $GITHUB_OUTPUT
        
        echo "should_run_manifestos=true" >> $GITHUB_OUTPUT
        echo "✅ マニフェスト: 手動収集実行" >> $GITHUB_STEP_SUMMARY
        
    - name: 📄 マニフェスト収集（手動実行）
      if: ${{ steps.collection-setup.outputs.should_run_manifestos == 'true' }}
      working-directory: scripts/uv-data-collection
      run: |
        # 収集モードに応じた実行
        COLLECTION_MODE="${{ steps.collection-setup.outputs.collection_mode }}"
        TARGET_PARTIES="${{ steps.collection-setup.outputs.target_parties }}"
        SKIP_UPDATE_CHECK="${{ steps.collection-setup.outputs.skip_update_check }}"
        
        # 基本コマンド構築
        CMD="uv run python collect_real_manifestos.py"
        
        # モード別オプション追加
        case "$COLLECTION_MODE" in
          "archive")
            CMD="$CMD --archive"
            ;;
          "forced")
            CMD="$CMD --force"
            ;;
          "standard"|*)
            # 標準モード（デフォルト）
            ;;
        esac
        
        # 対象政党指定
        if [ "$TARGET_PARTIES" != "all" ]; then
          CMD="$CMD --parties $TARGET_PARTIES"
        fi
        
        # 更新チェックスキップ
        if [ "$SKIP_UPDATE_CHECK" = "true" ]; then
          CMD="$CMD --skip-update-check"
        fi
        
        echo "実行コマンド: $CMD"
        eval $CMD
        
    - name: 💾 変更をコミット
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action [Manual Manifesto Collection]"
        git add frontend/public/data/manifestos/
        if ! git diff --staged --quiet; then
          COLLECTION_MODE="${{ steps.collection-setup.outputs.collection_mode }}"
          git commit -m "📄 マニフェスト収集（手動・${COLLECTION_MODE}）: $(date '+%Y-%m-%d %H:%M:%S JST')"
          git push
          echo "✅ マニフェスト更新完了" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ マニフェスト変更なし" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 📊 収集サマリー
      run: |
        echo "## 📄 マニフェスト収集結果" >> $GITHUB_STEP_SUMMARY
        echo "- **実行時刻**: $(date '+%Y-%m-%d %H:%M:%S JST')" >> $GITHUB_STEP_SUMMARY
        echo "- **実行方式**: 手動実行" >> $GITHUB_STEP_SUMMARY
        echo "- **収集モード**: ${{ steps.collection-setup.outputs.collection_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **対象政党**: ${{ steps.collection-setup.outputs.target_parties }}" >> $GITHUB_STEP_SUMMARY
        echo "- **更新チェック**: ${{ steps.collection-setup.outputs.skip_update_check == 'true' && 'スキップ' || '実行' }}" >> $GITHUB_STEP_SUMMARY

