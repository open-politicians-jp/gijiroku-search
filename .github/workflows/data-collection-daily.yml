name: 📊 日次データ収集（増分更新）

on:
  schedule:
    # 毎日午前5時（JST）に実行（UTC 20:00）
    - cron: '0 20 * * *'
  workflow_dispatch:
    inputs:
      target_scripts:
        description: '実行するスクリプト（all, speeches, questions, bills, committee, manifestos）'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - speeches
        - questions
        - bills
        - committee
        - manifestos

# GitHub Actionsでのcommit/push権限設定
permissions:
  contents: write
  actions: read

jobs:
  collect-daily-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: 🔧 Setup uv environment
      working-directory: scripts/uv-data-collection
      run: |
        uv sync
        
    - name: 🔍 Check for updates (Smart Skip)
      id: update-check
      working-directory: scripts/uv-data-collection
      run: |
        echo "## 🔍 Update Check Results" >> $GITHUB_STEP_SUMMARY
        
        # Check each data type (manifestos now handled by weekly workflow)
        for data_type in speeches committee_news; do
          if uv run python update_checker.py --data-type $data_type; then
            echo "should_run_${data_type}=true" >> $GITHUB_OUTPUT
            echo "✅ $data_type: Will collect" >> $GITHUB_STEP_SUMMARY
          else
            echo "should_run_${data_type}=false" >> $GITHUB_OUTPUT
            echo "⏭️ $data_type: Skip" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        # Note about manifestos
        echo "📄 manifestos: Handled by weekly workflow" >> $GITHUB_STEP_SUMMARY
        
        # Show summary
        echo "" >> $GITHUB_STEP_SUMMARY
        uv run python update_checker.py --summary >> $GITHUB_STEP_SUMMARY
        
    - name: 📊 議事録データ収集（過去1週間）
      if: ${{ (github.event.inputs.target_scripts == 'all' || github.event.inputs.target_scripts == 'speeches' || github.event.inputs.target_scripts == '') && steps.update-check.outputs.should_run_speeches == 'true' }}
      working-directory: scripts/uv-data-collection
      env:
        MONTHS_BACK: '0.25'  # 約1週間
        FORCE_UPDATE: 'false'
      run: |
        uv run python daily_data_collection.py
        # Update last processed timestamp
        uv run python -c "
from update_checker import UpdateChecker
checker = UpdateChecker()
checker.update_last_processed('speeches')
"
        
    # - name: 📋 質問主意書収集（増分）
    #   if: ${{ github.event.inputs.target_scripts == 'all' || github.event.inputs.target_scripts == 'questions' || github.event.inputs.target_scripts == '' }}
    #   working-directory: scripts/uv-data-collection
    #   run: |
    #     uv run python collect_questions_fixed.py
        
    # - name: 📜 提出法案収集（増分）
    #   if: ${{ github.event.inputs.target_scripts == 'all' || github.event.inputs.target_scripts == 'bills' || github.event.inputs.target_scripts == '' }}
    #   working-directory: scripts/uv-data-collection
    #   run: |
    #     uv run python collect_bills_fixed.py
        
    - name: 📰 委員会ニュース収集（増分）
      if: ${{ (github.event.inputs.target_scripts == 'all' || github.event.inputs.target_scripts == 'committee' || github.event.inputs.target_scripts == '') && steps.update-check.outputs.should_run_committee_news == 'true' }}
      working-directory: scripts/uv-data-collection
      run: |
        uv run python collect_committee_news_fixed.py
        # Update last processed timestamp
        uv run python -c "
from update_checker import UpdateChecker
checker = UpdateChecker()
checker.update_last_processed('committee_news')
"
        
    # マニフェスト収集は週次ワークフローに移行
    # - name: 📄 マニフェスト収集（増分）
    #   if: ${{ github.event.inputs.target_scripts == 'manifestos' }}
    #   working-directory: scripts/uv-data-collection
    #   run: |
    #     echo "📄 マニフェスト収集は週次ワークフローで実行されます"
    #     echo "手動実行する場合: uv run python collect_real_manifestos.py --weekly --archive"
        
    - name: 🔧 大きなファイル分割
      working-directory: scripts/uv-data-collection
      run: |
        uv run python split_large_files.py || true
        
    - name: 🔗 リンク修正
      working-directory: scripts/uv-data-collection
      run: |
        uv run python fix_questions_links.py || true
        
    - name: 💾 変更をコミット
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action [Daily Data Collection]"
        git add frontend/public/data/ scripts/uv-data-collection/data/
        if ! git diff --staged --quiet; then
          git commit -m "📊 日次データ収集: $(date '+%Y-%m-%d %H:%M:%S JST')"
          git push
          echo "✅ 新規データ更新完了" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ 新規データなし（スマートスキップ実行）" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 📊 収集サマリー
      run: |
        echo "## 📊 日次データ収集結果" >> $GITHUB_STEP_SUMMARY
        echo "- **実行時刻**: $(date '+%Y-%m-%d %H:%M:%S JST')" >> $GITHUB_STEP_SUMMARY
        echo "- **対象**: 増分データ（過去1週間）" >> $GITHUB_STEP_SUMMARY
        echo "- **対象スクリプト**: ${{ github.event.inputs.target_scripts || 'all' }}" >> $GITHUB_STEP_SUMMARY
