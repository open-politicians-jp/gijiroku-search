name: GitHub Pages デプロイ

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python and UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Python dependencies
        working-directory: scripts/uv-data-collection
        run: uv sync

      - name: Run data collection
        working-directory: scripts/uv-data-collection
        run: |
          uv run python daily_data_collection.py
          uv run python collect_committee_news_fixed.py
          uv run python collect_bills_fixed.py
          uv run python collect_legislators_profiles.py
          uv run python collect_questions_fixed.py
          uv run python process_committee_data.py

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('frontend/**/package-lock.json') }}-${{ hashFiles('frontend/**/*.js', 'frontend/**/*.jsx', 'frontend/**/*.ts', 'frontend/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('frontend/**/package-lock.json') }}-

      - name: Build with Next.js
        working-directory: frontend
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4